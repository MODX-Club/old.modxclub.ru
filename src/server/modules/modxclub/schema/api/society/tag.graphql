
type Tag {
  name: String!
  count: Int!
  topic_ids: [Int!]!
  # Topics(
  #   where: TopicWhereInput
  #   orderBy: TopicOrderByInput
  #   skip: Int
  #   first: Int
  # ): [Topic!]!
}


input TagWhereInput {
  name: String
  topic_id: Int
}

input TagWhereUniqueInput {
  name: String
}

enum TagOrderByInput {
  name_ASC
  name_DESC
  count_ASC
  count_DESC
}

type TagConnection {
  edges: [TagEdge]!
  aggregate: AggregateTag!
}


type AggregateTag {
  count: Int!
}

type TagEdge {
  node: Tag!
}