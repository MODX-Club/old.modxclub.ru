
type Thread {
  id: Int!
  target_id: Int!
  target_class: SocietyTargetEnum!
  comments_count: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  rating: Float!
  positive_votes: Int!
  negative_votes: Int!
  neutral_votes: Int!
  Comments: [Comment!]!
  Votes(
    where: VoteWhereInput
    orderBy: VoteOrderByInput
    skip: Int
    first: Int
  ): [Vote!]!
}

input ThreadWhereInput {
  id: Int
}

input ThreadWhereUniqueInput {
  id: Int
}

enum ThreadOrderByInput {
  id_ASC
  id_DESC
}

type ThreadConnection {
  edges: [ThreadEdge]!
  aggregate: AggregateThread!
}


type AggregateThread {
  count: Int!
}

type ThreadEdge {
  node: Thread!
}