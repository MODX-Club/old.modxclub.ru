import React, { Component, Fragment } from 'react';
import PropTypes from 'prop-types';

import {
  styles,
  TableView,
} from "apollo-cms/lib/DataView/List/Table";

import withStyles from "material-ui/styles/withStyles";
import Typography from "material-ui/Typography";
import Grid from "material-ui/Grid";

import Pagination from "../Pagination";


const customStyles = theme => {

  return {
    root: {
      border: 0,
      boxShadow: "none",
    },
    table: {
      // border: 2,
      // borderColor: "red",
    },
  }
}

class ObjectsListView extends TableView {


  static propTypes = {
    ...TableView.propTypes,
    withPagination: PropTypes.bool.isRequired,
  }


  static defaultProps = {
    ...TableView.defaultProps,
    withPagination: true,
    columnData: [],
    limit: 0,
  }


  getColumns() {

    const {
      columnData,
    } = this.props;

    return [
      {
        id: "id"
      },
    ].concat(columnData);
  }


  render() {

    const {
      page,
      withPagination,
    } = this.props;

    // console.log("this.defaultProps", this.defaultProps);

    const {
      objectsConnection,
      loading,
      variables: {
        first: limit,
      },
    } = this.props.data;


    const {
      edges,
      aggregate,
    } = objectsConnection || {};

    const {
      count = 0,
    } = aggregate || {};

    if (!edges || !edges.length) {

      if (loading) {
        return null;
      }
      else {
        return <Typography>
          Данные не были получены
        </Typography>
      }


    }


    return <Fragment>

      {super.render()}

      {withPagination ? <Grid
        container
        spacing={0}
      >

        {edges && edges.length ? <Grid
          item
          xs={12}

        >
          <Pagination
            limit={limit}
            total={count}
            page={page || 1}
            style={{
              marginTop: 20,
            }}
          />
        </Grid> : null
        }

      </Grid> : null
      }

    </Fragment>;

  }


}

export {
  customStyles as styles,
  ObjectsListView as TableView,
}

export default withStyles(customStyles)(ObjectsListView);