
import expect from 'expect'

import React, { Component } from 'react'
import { render, unmountComponentAtNode } from 'react-dom'
import PropTypes from "prop-types";

import withStyles from 'material-ui/styles/withStyles';

import TestApp from "../App";

import {
  Link,
  UserLink,
  CompanyLink,
  PlaceLink,
} from '../../'

class Renderer extends Component {

  static propTypes = {
  }

  render() {

    const {
      ...other
    } = this.props;

    return <div
      id="content"
      {...other}
    />

  }
}



describe('Components', () => {
  let node


  beforeEach(() => {
    node = document.createElement('div')
  })

  afterEach(() => {
    unmountComponentAtNode(node)
  })


  it(`Render Link`, () => {
    render(<TestApp
      lang="ru"
      Renderer={Renderer}
    >
      <Link />
    </TestApp>, node, () => {

      // console.log("link node", node.innerHTML);

      const anchor = node.querySelector("a");

      expect(anchor.getAttribute("href")).toBe("javascript:;");

    })
  });


  it(`Render UserLink`, () => {

    const fullname = "Test User";
    const id = "test_id"

    const url = `/users/${id}`;

    render(<TestApp
      lang="ru"
      Renderer={Renderer}
    >
      <UserLink
        user={{
          id,
          fullname,
        }}
      />
    </TestApp>, node, () => {

      let nameChar = fullname.substr(0, 1);

      // console.log("link node", node.innerHTML);

      const anchors = node.querySelectorAll("a");

      expect(anchors.length).toBe(2);

      const anchorAvatar = anchors[0];
      const anchor = anchors[1];


      // console.log("anchor node", `'${anchor.innerHTML}'`);
      // console.log("anchorAvatar node", anchorAvatar.innerHTML);

      expect(anchorAvatar.textContent).toBe(nameChar);

      expect(anchor.innerHTML).toBe(fullname);

      expect(anchorAvatar.getAttribute("title")).toBe(fullname);

      expect(anchor.getAttribute("href")).toBe(url);
      expect(anchorAvatar.getAttribute("href")).toBe(url);

    })
  });


  it(`Render CompanyLink`, () => {

    const name = "Test Company";
    const id = "test_id"

    const url = `/companies/${id}`;

    render(<TestApp
      lang="ru"
      Renderer={Renderer}
    >
      <CompanyLink
        id={id}
      >
        {name}
      </CompanyLink>
    </TestApp>, node, () => {

      const anchors = node.querySelectorAll("a");

      expect(anchors.length).toBe(1);

      const anchor = anchors[0];

      // console.log("anchor", anchor.innerHTML);

      expect(anchor.innerHTML).toBe(name);

      expect(anchor.getAttribute("href")).toBe(url);

    })
  });


  it(`Render PlaceLink`, () => {

    const name = "Test Place";
    const id = "test_id"

    const url = `/places/${id}`;

    render(<TestApp
      lang="ru"
      Renderer={Renderer}
    >
      <PlaceLink
        id={id}
      >
        {name}
      </PlaceLink>
    </TestApp>, node, () => {

      const anchors = node.querySelectorAll("a");

      expect(anchors.length).toBe(1);

      const anchor = anchors[0];

      // console.log("anchor", anchor.innerHTML);

      expect(anchor.innerHTML).toBe(name);

      expect(anchor.getAttribute("href")).toBe(url);

    })
  });


})
