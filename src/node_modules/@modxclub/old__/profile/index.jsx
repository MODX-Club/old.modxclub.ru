import React, {Component} from 'react';

import ExitIcon from 'material-ui-icons/ExitToApp';
import SocialPersonOutline from 'material-ui-icons/PersonOutline';
import Description from 'material-ui-icons/Description';
import AccountBox from 'material-ui-icons/AccountBox';
import OfficeIcon from 'material-ui-icons/Store';


import IconButton from 'material-ui/IconButton';
import Avatar from '../Avatar';

import Menu, {MenuItem} from 'material-ui/Menu';

import Popover from 'material-ui/internal/Popover';

import {Link} from 'react-router-dom';

import List, {
  ListItem,
  ListItemText,
  ListItemIcon,
  ListItemSecondaryAction
} from 'material-ui/List';

import {CONNECTOR_URL} from '../const';
 

const propTypes = {};

const defaultProps = {};

class ProfileIcon extends Component {

  constructor(props) {
    super(props);

    this.state = {
      open: false,
    }
  };

  handleLogin() {
    this.props.userActions.loginClicked();
    // this.props.userActions.loginComplete();
  }

  handleLogout() {

    fetch(CONNECTOR_URL + '?pub_action=logout', {
      credentials: 'same-origin',
    })
      .then(function (response) {
        // console.log('LOGIN RESPONSE',response.json());
        return response.json()
      })
      .then(function (data) {
        // console.log('LOGIN DATA', data);
        // self.setState({orders: data.object});

        if (data.success) {
          this.props.userActions.logoutComplete();
        }
        else {
          alert(data.message || "Ошибка выполнения запроса");
        }
      }.bind(this))
      .catch(function (error) {
          console.log('Request failed', error);
        }
      );

    this.handleRequestClose();
  }

  SwitchPage(page) {
    this.props.documentActions.SwitchView(page);
  }


  handleClick = (event) => this.setState({
    open: true,
    anchorEl: event.currentTarget,
  });

  handleRequestClose = () => {
    console.log('handleRequestClose');
    this.setState({
      open: false,
    })
  };

  componentDidMount() {

    this.props.userActions.GetOwnData();
  }

  render() {

    let avatarButtonStyle = {
      width: undefined,
      height: undefined,
      padding: 0,
      margin: '0 12px',
    }

    var icon; 
    if (this.props.user.user && parseInt(this.props.user.user.id) > 0) {

      var user = this.props.user.user;

      icon = <IconButton
        aria-owns="profile-menu"
        aria-haspopup="true"
        onClick={this.handleClick}
      >
        <Avatar
          avatar={user.photo}
          username={user.username}
        />
        <Popover
          id="profile-menu"
          anchorEl={this.state.anchorEl}
          open={this.state.open}
          onRequestClose={this.handleRequestClose}
          anchorOrigin={{
            vertical: 'bottom',
            horizontal: 'right',
          }}
          transformOrigin={{
            vertical: 'top',
            horizontal: 'right',
          }}
        > 
          <List>

            <Link 
              to={`/profile/${user.username}`}
              href={`/profile/${user.username}`}
              className="underline-none"
            >
              <ListItem
                button
                onTouchTap={() => { 
                  this.handleRequestClose();
                }}
              >
                <ListItemIcon>
                  <AccountBox />
                </ListItemIcon>
                <ListItemText primary="Профиль" />
              </ListItem>
            </Link>


            <Link 
              to={`/office/`}
              href={`/office/`}
              className="underline-none"
            >
              <ListItem
                button
                onTouchTap={() => { 
                  this.handleRequestClose();
                }}
              >
                <ListItemIcon>
                  <OfficeIcon />
                </ListItemIcon>
                <ListItemText primary="Личный кабинет" />
              </ListItem>
            </Link>

            <Link 
              to={`/add-topic.html`}
              href={`/add-topic.html`}
              className="underline-none"
            >
              <ListItem
                button
                onTouchTap={() => { 
                  this.handleRequestClose();
                }}
              >
                <ListItemIcon>
                  <Description />
                </ListItemIcon>
                <ListItemText primary="Создать топик" />
              </ListItem>
            </Link>

            <ListItem
              button
              onTouchTap={() => {
                this.handleLogout()
              }}
            >
              <ListItemIcon>
                <ExitIcon />
              </ListItemIcon>
              <ListItemText primary="Выход" />
            </ListItem>
          </List>

        </Popover>
      </IconButton>
    }
    else {
      icon = <IconButton
        onTouchTap={this.handleLogin.bind(this)}
        contrast
      >
        <SocialPersonOutline />
      </IconButton>;
    }

    // console.log(icon);

    return icon;
  };

}
;


ProfileIcon.propTypes = propTypes;
ProfileIcon.defaultProps = defaultProps;

 

export default ProfileIcon
