import React, {Component} from 'react';

import {Link} from 'react-router-dom';

import BuildSiteIcon from 'material-ui-icons/Build';
import ManageProjectIcon from 'material-ui-icons/Accessibility';
import TechOptimizationIcon from 'material-ui-icons/BugReport';
import DesignIcon from 'material-ui-icons/SettingsBrightness';
import PageProofsIcon from 'material-ui-icons/ImportantDevices';
import ContentPasteIcon from 'material-ui-icons/ContentPaste';

import ReactDecliner from 'react-decliner';

import DefaultIcon from 'material-ui-icons/Work';

import PropTypes from 'prop-types'; 

export default class ServicesList extends Component{

	static propTypes = {
		user_id: PropTypes.number,
		services: PropTypes.array.isRequired,
	};

	static defaultProps = {
	};

	constructor(props){

		super(props);

		this.state = {}
	} 

	getIcon = (item) => {

		let icon ;

		// console.log('getIcon item', item);

		switch(parseInt(item.id)){

			// Наполнение сайта
			case 1478:
				icon = <ContentPasteIcon 
				/>
				break;

			// Верстка
			case 1475:
				icon = <PageProofsIcon 
				/>
				break;

			// Разработка дизайна
			case 1474:
				icon = <DesignIcon 
				/>
				break;

			// Разработка сайта
			case 1476:
				icon = <BuildSiteIcon 
				/>
				break;

			// Управление проектами
			case 1477:
				icon = <ManageProjectIcon 
				/>
				break;

			// Техническая оптимизация
			case 1479:
				icon = <TechOptimizationIcon 
				/>
				break;
		}

		return icon || <DefaultIcon />;
	}

	getUrl (user_id, service_id) {

		if(!user_id || !service_id){
			return null;
		}

		return `/katalog-sajtov/?member=${user_id}&service=${service_id}`;
	}

	render(){

		let {
			user_id,
			services,
			renderer,
			...other
		} = this.props;

		if(!services || !services.length){

			return null;
		}

        
		// console.log('companies', companies);


    let companies_list = [];

    let content = null; 


		if(services && services.length){
      content = renderer && renderer(services, this.getIcon, this.getUrl) ||
      	<span {...other}>{
      			services.map(c => {

		        let {
		          id: service_id,
		          name,
		          uri,
		          count,
		        } = c;

		        return <span
		          key={service_id}
		          // to={uri}
		          // title={name}
		          className="underline-none nowrap"
		        >
		          {name} (<Link
		          	to={this.getUrl(user_id, service_id)}
		          	href={this.getUrl(user_id, service_id)}
		          ><b>{count}</b> <ReactDecliner 
		          	num={parseInt(count) || 0}
		          	words={["работа", "работы", "работ"]}
		          /></Link>)
		        </span>
		      }).reduce((prev, curr) => [prev, ', ', curr])}
	     	</span>;
    }

    return content;
	}
} 