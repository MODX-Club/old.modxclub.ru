import React, {Component} from 'react';

import PropTypes from 'prop-types';

import Card, { CardActions, CardHeader, CardMedia} from 'material-ui/Card';
import Grid from 'material-ui/Grid';
import Typography from 'material-ui/Typography';
import Button from 'material-ui/Button';
import Addicon from 'material-ui-icons/ImportantDevices';

import {Link} from 'react-router-dom';

import Pagination from '../../../pagination';
import WarningMessage from '../../../fields/warning';
import Work from '../work';

import {browserHistory} from 'react-router-dom';

export default class WorksList extends Component{

	static defaultProps = {
    works: PropTypes.array.isRequired,
    page: PropTypes.number,
    limit: PropTypes.number,
    total: PropTypes.number,
		user: PropTypes.object.isRequired,
	}

	constructor(props){

		super(props);

		this.state = {}
	} 

	render(){

    let {
      works,
      page,
      limit,
      total,
      user,
    } = this.props || {}

    let authUser = (user && user.user && user.user.id > 0 ? user.user : null)

    var content = [];

    works = works || [];

    if(!works.length){
    	return <WarningMessage 
    	>
    		Не были получены записи
    	</WarningMessage>
    }

    works && Array.isArray(works) && works.map(function(item){
      content.push(<Work
        key={item.id}
        item={item}
        user={user}
        // documentActions={this.props.documentActions}
      />);
    }, this);

    return <div>
      <Grid
        container
      >

        {authUser
          ?
          <Grid
            item
            xs={12}
          >
            <Link
              to="/office/portfolio/create/"
              href="/office/portfolio/create/"
              className="underline-none"
            >
            <Button>
              <Addicon 
                style={{
                  marginRight: 5,
                }}
              /> Добавить работу
            </Button>
            </Link>
          </Grid>
          :
          null
        }

        {content}
      </Grid>

      {total && <Pagination
        page={page || 1}
        limit={limit}
        total={total}
      />}

    </div>;
  }
} 