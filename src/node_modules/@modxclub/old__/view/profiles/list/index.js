import React, {Component} from 'react';

import PropTypes from 'prop-types';

import moment from 'moment';

import Table, { TableBody, TableCell, TableHead, TableRow } from 'material-ui/Table';
import Paper from 'material-ui/Paper';

import {Link} from 'react-router-dom';

import SuccessIcon from 'material-ui-icons/Check';
import FailureIcon from 'material-ui-icons/Clear';

import Pagination from '../../../pagination';
import Avatar from '../../../Avatar';
import WarningMessage from '../../../fields/warning';
import CompaniesList from '../../../fields/user/companies_list';
import ServicesList from '../../../fields/user/services_list';
import UserLink from '../../../fields/user/link';

export default class ProfilesList extends Component{

	static defaultProps = {
	};

	static propTypes = {
		profiles: PropTypes.array.isRequired,
		page: PropTypes.number,
		limit: PropTypes.number,
		total: PropTypes.number,
	};

	constructor(props){

		super(props);

		this.state = {}
	}

	render(){

		let {
      profiles,
      page,
      limit,
      total,
		} = this.props || {}

		if(!profiles || !profiles.length){
    	return <WarningMessage 
    	>
    		Не были получены пользователи
    	</WarningMessage>
		} 
 

  	let thead = <TableHead>
  		<TableRow>
  		
  			<TableCell>
  				Пользователь
  			</TableCell>

        <TableCell>
          Команда
        </TableCell>

        <TableCell>
          Работ в портфолио
        </TableCell>

  			<TableCell>
  				Услуги
  			</TableCell>

  			<TableCell>
  				Зарегистрирован
  			</TableCell>

  			<TableCell>
  				E-Mail
  			</TableCell>


  		</TableRow>
  	</TableHead>;

  	let rows = [];

  	if(profiles && profiles.length){
  		profiles.map(profile => {

        // console.log('Profile', profile);

  			let {
          id,
          blocked,
  				active,
          username,
          fullname,
          email,
          photo,
          author_avatar,
          companies,
          services,
          works,
          blockeduntil,
          regdate,
  			} = profile;

        id = parseInt(id);

  			let address = [];

  			rows.push(<TableRow
  				key={id}
  			> 
      
        <TableCell> 

          <UserLink 
            user={profile}
          />

        </TableCell>
 

        <TableCell>
          {companies && companies.length && <CompaniesList companies={companies}/> || undefined}
        </TableCell>

        <TableCell>
          {works > 0 ?
            <Link 
              to={`/katalog-sajtov/?owner=${id}`}
              href={`/katalog-sajtov/?owner=${id}`}
            >{works}</Link>
            :
            null
          }
        </TableCell>

        <TableCell>
          {services && services.length && <ServicesList services={services} user_id={id}/> || undefined}
        </TableCell>

 

        <TableCell>
          
          {moment(regdate * 1000).format("YYYY-MM-DD")}

          {blockeduntil && blockeduntil *1000 > new Date().getTime()
            ?
              <span> / <b>
                  Заблокирован до {moment(blockeduntil * 1000).format("YYYY-MM-DD HH:mm:ss")}
                </b>
              </span>
            :
            null
          }

        </TableCell>

        <TableCell>
          {email && <a href={`mailto:${email}`}>{email}</a> || ''}
        </TableCell>
 
	  		</TableRow>);
	  		});
  	}

  	let tbody = <TableBody>
  		{rows}
  	</TableBody>;

    return <div>
    	
    	<Paper
    	style={{
    		overflow: 'auto',
    	}}
    >
      
      <Table
      	className="table"
      >
      	{thead}
      	{tbody}
      </Table>

    </Paper>

      {total && <Pagination
        page={page || 1}
        limit={limit}
        total={total}
      />}

    </div>
  }
} 