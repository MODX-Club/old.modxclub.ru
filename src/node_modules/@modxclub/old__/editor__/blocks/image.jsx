
'use strict';

import React from 'react';

import { createStyleSheet } from 'jss-theme-reactor';
import customPropTypes from 'material-ui/utils/customPropTypes';

import Dialog, {DialogActions, DialogContent} from 'material-ui/Dialog';
import Button from 'material-ui/Button';

import './styles/styles.less';

var classes;

const propTypes = {
};

const defaultProps = {
  open: false,
};

const styleSheet = createStyleSheet('ImageBlock', (theme) => {

  var css = {
    root: {
    },
    dialog: {
      '& .dialog-paper': {
        maxWidth: '90%',
        width: 'auto',
      },
    },
    dialogContent: {
    },
  };

  return css;
});


export default class ImageBlock extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      original_url: props.block.data.get("original_url"),
      src: props.block.data.get("url"),
      open: props.open,
    };
  }

  handleOpen = () => {
    this.setState({open: true});
  };

  handleClose = () => {
    this.setState({open: false});
  };

  componentWillMount(){
    classes = this.context.styleManager.render(styleSheet);
  }

  render() {


    if(!this.state.src){
      return null;
    }

    return (
      <div className={["editor-image__wrapper", classes.root].join(" ")}>
        <div className="editor-image__anchore_wrapper">
          {this.state.original_url ? <a href={this.state.original_url} target="_blank" rel="nofollow">
            {this.state.original_url}
          </a> : null
          }
        </div>
        <img
          className="editor-image thumb"
          src={this.state.src}
          onClick={this.handleOpen}
        />

        <Dialog
          className={[classes.dialog].join(" ")}
          onRequestClose={this.handleClose}
          open={this.state.open}
          paperClassName="dialog-paper"
        >

          <DialogContent
            className={[classes.dialogContent].join(" ")}
          >
            <img
              className="editor-image opened"
              src={this.state.src}
            />
          </DialogContent>

          <DialogActions>
            <Button
              key="close"
              onTouchTap={this.handleClose}
            >Закрыть</Button>
          </DialogActions>
        </Dialog>
      </div>
    );
  }
}

ImageBlock.propTypes = propTypes;
ImageBlock.defaultProps = defaultProps;

ImageBlock.contextTypes = {
  styleManager: customPropTypes.muiRequired,
}