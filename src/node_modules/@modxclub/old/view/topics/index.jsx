import React, {Component} from 'react';

import PropTypes from 'prop-types';

// import View from '../index';
import Articles from '../../articles/index';

export default class TopicsView extends Component {

  // static contextTypes = {
  //   Location: PropTypes.object.isRequired,
  // }

  constructor(props){

    super(props);

    this.state = {
      document: false,
      articles: {},
      showFilters: true,
    }

    if(
      props.document.document.view == "Topics"
      || props.document.document.view == "TopicsTag"
    ){
      this.state.document = props.document;
      this.state.articles = props.document.document.data;
    }
  }



  componentWillReceiveProps(nextProps){

    // console.log("Topics componentWillReceiveProps", nextProps);

    if(nextProps.document.document.view == "Topics"){
      this.setState({
        "document": nextProps.document,
        "articles": nextProps.document.document.data,
      });
    }

    return true;
  }


  componentWillMount(){

  }

  // shouldComponentUpdate(nextProps, nextState){
  //   // alert('shouldComponentUpdate');
  //   return this.state.document != false;
  // }

  // componentDidUpdate(prevProps, prevState){
  //   console.log("Topics componentDidUpdate", prevProps, prevState);

  // }

  getTitle(){

    return "Топики";
  }

  render(){

    let {
      articles,
      showFilters,
    } = this.state;

    if(!articles || !articles.object){
      return (<h3>Загружаем топики...</h3>);
    }

    return <Articles
      articles={articles}
      documentActions={this.props.documentActions}
      user={this.props.user && this.props.user.user}
      fullView={false}
      pagetitle={this.getTitle()}
      showFilters={showFilters}
    />
  }
}

