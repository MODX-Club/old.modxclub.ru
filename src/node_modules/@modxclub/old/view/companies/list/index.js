import React, {Component} from 'react';

import PropTypes from 'prop-types';

import moment from 'moment';

import Table, { TableBody, TableCell, TableHead, TableRow } from 'material-ui/Table';
import Paper from 'material-ui/Paper';
import Button from 'material-ui/Button';
import IconButton from 'material-ui/IconButton';

import {Link} from 'react-router-dom';

import EditIcon from 'material-ui-icons/ModeEdit';
import SaveIcon from 'material-ui-icons/Save';
import SuccessIcon from 'material-ui-icons/Check';
import FailureIcon from 'material-ui-icons/Clear';

import Pagination from '../../../pagination';
import Avatar from '../../../Avatar';
import WarningMessage from '../../../fields/warning';
import UserLink from '../../../fields/user/link';
// import CompaniesList from '../../../fields/user/companies_list';
// import ServicesList from '../../../fields/user/services_list';

export default class CompaniesList extends Component{

  static contextTypes = {
    createCompany: PropTypes.func.isRequired,
    saveCompany: PropTypes.func.isRequired,
  }

	static defaultProps = {
	};

	static propTypes = {
		companies: PropTypes.array.isRequired,
		page: PropTypes.number,
		limit: PropTypes.number,
    total: PropTypes.number,
		user: PropTypes.object.isRequired,
	};

	constructor(props){

		super(props);

		this.state = {}
	}

	render(){

    let {
      saveCompany,
    } = this.context;

		let {
      companies,
      page,
      limit,
      total,
      user: {
        user,
      },
		} = this.props || {}

    
    user = user || {};

    if(!companies || !companies.length){
      return <WarningMessage 
      >
        Не были получены компании
      </WarningMessage>
    } 
		 
     let thead = <TableHead>
      <TableRow>
        {user.id
          ?
            <TableCell>
          
            </TableCell>
          :
          null
        }
      
        <TableCell>
          Компания
        </TableCell>
      
        <TableCell>
          Владелец
        </TableCell>

        <TableCell>
          Адрес
        </TableCell>

        <TableCell>
          Веб-сайт
        </TableCell>

        {/*
          <TableCell>
            Емейл
          </TableCell>
        */}

        <TableCell>
          Работ / сотрудников
        </TableCell>

        {/*
          <TableCell>
            Статус
          </TableCell>
        */}

      </TableRow>
    </TableHead>;

    let rows = [];

    if(companies && companies.length){
      companies.map(company => {

        // console.log('company', company);

        let {
          id,
          pagetitle,
          company_id,
          company_name,
          uri,
          published,
          country,
          city,
          company_address,
          company_website,
          company_email,
          company_works,
          total_company_users,
          company_status,
          owner_id,
          owner_username,
          owner_fullname,
          owner_photo,
          owner_active,
          _isDirty,
        } = company;

        let address = [];

        country && address.push(country);
        city && address.push(city);
        company_address && address.push(company_address);


        if(company_website){
          if(!/:\/\//.test(company_website)){
            company_website = `http://${company_website}`;
          }
        }

        let actions = [];

        if(owner_id && owner_id == user.id || user.sudo == "1"){

          if(_isDirty){
            actions.push(<IconButton
              key="save"
              onClick={event => saveCompany(company)}
            >
              <SaveIcon 
                color="red"
              />
            </IconButton>);
          }
          else{
            actions.push(<IconButton
              key="edit"
            >
              <Link
                to={`/office/company/edit/${company_id}`}
                href={`/office/company/edit/${company_id}`}
              >
                <EditIcon />
              </Link>
            </IconButton>);
          }


        }

        rows.push(<TableRow
          key={id || `company_{rows.length}`}
        >
          {user.id 
            ? 
            <TableCell>
              {actions}
            </TableCell>
            :
            null
          }

          <TableCell>

            <Link 
              to={uri}
              href={uri}
              title={company_name}
            >
              {published
                ?
                  company_name
                :
                  <s>{company_name}</s>
              }
            </Link>

          </TableCell>

          <TableCell>
            
            <UserLink 
              user={{
                id: owner_id,
                username: owner_username,
                fullname: owner_fullname,
                photo: owner_photo,
                active: owner_active,
              }}
            />

          </TableCell>

          <TableCell>
            {address.length && address.join(", ") || ""}
          </TableCell>

          <TableCell>
          
            {company_website
              ?
                <a
                  to={company_website}
                  title={company_name}
                  className="underline-none"
                >
                  {company_website}
                </a>
              :
              null}

          </TableCell>


          {/*
            <TableCell>

              {company_email
                ?
                  <a
                    href={`mailto:${company_email}`}
                  >
                    {company_email}
                  </a>
                :
                null}
            </TableCell>
          */}

          <TableCell>
            {company_works > 0 
              ? 
              <Link 
                to={`/katalog-sajtov/?company=${company_id}`}
                href={`/katalog-sajtov/?company=${company_id}`}
              >{company_works}</Link> 
            : 0} / {total_company_users > 0 
              ?
                <Link 
                  to={`/people/?company=${company_id}`}
                  href={`/people/?company=${company_id}`}
                >{total_company_users}</Link> 
              :
            0}
          </TableCell>


          {/*
            <TableCell>
              {company_status == "1"
                ?
                  <SuccessIcon />
                :
                  <FailureIcon />
              }
            </TableCell>
          */}

        </TableRow>);
        });
    }

    let tbody = <TableBody>
      {rows}
    </TableBody>;

    return <div>
      
      <Paper
      style={{
        overflow: 'auto',
      }}
    >
      
      <Table
        className="table"
      >
        {thead}
        {tbody}
      </Table>

    </Paper>

      {total && <Pagination
        page={page || 1}
        limit={limit}
        total={total}
      />}

    </div>
  }
} 